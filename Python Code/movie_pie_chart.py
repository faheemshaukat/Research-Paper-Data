# -*- coding: utf-8 -*-
"""Movie Pie Chart.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dqgN02xzsKrrLmxZKoxDvXllLp94x6Gn
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Create a DataFrame with the provided data
data = {
    'Movie': [
        "The Twilight Saga: Eclipse (2010)",
        "I Am Number Four (2011)",
        "Snow White and the Huntsman (2012)",
        "Hansel & Gretel: Witch Hunters (2013)",
        "Dracula Untold (2014)"
    ],
    'Action': [5, 30, 30, 30, 20],
    'Adventure': [0, 40, 20, 30, 20],
    'Romance': [50, 10, 15, 0, 20],
    'Fantasy': [30, 20, 30, 20, 20],
    'Family': [5, 0, 0, 0, 0],
    'Horror': [10, 0, 5, 20, 20]
}

df = pd.DataFrame(data)

# Set the 'Movie' column as the DataFrame index
df.set_index('Movie', inplace=True)

# Loop through each row in the DataFrame and create a pie chart for each movie
for index, row in df.iterrows():
    plt.figure(figsize=(6, 6))
    plt.pie(row, labels=row.index, autopct='%1.1f%%', startangle=140)
    plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
    plt.title(index)
    plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Create a DataFrame with the provided data
data = {
    'Movie': [
        "The Twilight Saga: Eclipse (2010)"
    ],
    'Action': [5],
    'Adventure': [0],
    'Romance': [50],
    'Fantasy': [30],
    'Family': [5],
    'Horror': [10]
}

df = pd.DataFrame(data)

# Set the 'Movie' column as the DataFrame index
df.set_index('Movie', inplace=True)

# Set a custom color palette for the pie chart
colors = sns.color_palette("pastel")

# Create a pie chart
plt.figure(figsize=(8, 8))
plt.pie(df.iloc[0], labels=df.columns, colors=colors, autopct='%1.1f%%', startangle=140)
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
plt.title(df.index[0])

# Show the plot
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Create a DataFrame with the provided data
data = {
    'Movie': [
        "The Twilight Saga: Eclipse (2010)"
    ],
    'Action': [5],
    'Adventure': [0],
    'Romance': [50],
    'Fantasy': [30],
    'Family': [5],
    'Horror': [10]
}

df = pd.DataFrame(data)

# Set the 'Movie' column as the DataFrame index
df.set_index('Movie', inplace=True)

# Set a custom color palette for the pie chart
colors = sns.color_palette("pastel")

# Create a beautiful layout using Seaborn's "whitegrid" style
sns.set(style="whitegrid")
plt.figure(figsize=(8, 8))

# Create a pie chart
plt.pie(df.iloc[0], labels=df.columns, colors=colors, autopct='%1.1f%%', startangle=140, wedgeprops=dict(width=0.4))
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
plt.title(df.index[0])

# Show the plot
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

data = {
    'Movie': [
        "The Twilight Saga: Eclipse (2010)"
    ],
    'Action': [5],
    'Adventure': [0],
    'Romance': [50],
    'Fantasy': [30],
    'Family': [5],
    'Horror': [10]
}

df = pd.DataFrame(data)
df.set_index('Movie', inplace=True)

# Set a custom color palette for the pie chart
colors = sns.color_palette("bright")

# Set the style to ticks with a modern color palette
sns.set(style="ticks")
plt.figure(figsize=(8, 8))

plt.pie(df.iloc[0], labels=df.columns, colors=sns.color_palette("colorblind"), autopct='%1.1f%%', startangle=140, wedgeprops=dict(width=0.4))
plt.axis('equal')
plt.title(df.index[0])

plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

data = {
    'Movie': [
        "The Twilight Saga: Eclipse (2010)"
    ],
    'Action': [5],
    'Adventure': [0],
    'Romance': [50],
    'Fantasy': [30],
    'Family': [5],
    'Horror': [10]
}

df = pd.DataFrame(data)
df.set_index('Movie', inplace=True)

# Set specific colors from the 'Set3' palette for each category
colors = sns.color_palette("Set3", n_colors=len(df.columns))

# Set the style to whitegrid
sns.set(style="whitegrid")
plt.figure(figsize=(8, 8))

plt.pie(df.iloc[0], labels=df.columns, colors=colors, autopct='%1.1f%%', startangle=140, wedgeprops=dict(width=0.4))
plt.axis('equal')
plt.title(df.index[0])

plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

data = {
    'Movie': [
        "The Twilight Saga: Eclipse (2010)"
    ],
    'Action': [5],
    'Adventure': [0],
    'Romance': [50],
    'Fantasy': [30],
    'Family': [5],
    'Horror': [10]
}

df = pd.DataFrame(data)
df.set_index('Movie', inplace=True)

# Set the same color combination as in the 'viridis' palette
colors = ['#440154', '#3B528B', '#21908C', '#5DC863', '#FDAE61', '#FEE08B']

# Set the style to whitegrid
sns.set(style="whitegrid")
plt.figure(figsize=(8, 8))

# Create the pie chart with labels and percentage values
wedges, texts, autotexts = plt.pie(df.iloc[0], labels=[f'{label}\n{val}%' for label, val in zip(df.columns, df.iloc[0])], colors=colors, startangle=140, autopct='', wedgeprops=dict(width=0.4))
plt.axis('equal')

# Adjust layout to prevent title from crossing inner circle and center the title
plt.title("")  # Clear the title to make space for the movie title
plt.text(0, 0, df.index[0], ha='center', va='center', fontsize=16, color='black')

# Set the position of the title to be more centered
plt.gcf().subplots_adjust(top=0.9)  # Adjust top margin

# Show the plot
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

data = {
    'Movie': [
        "The Twilight Saga: Eclipse (2010)"
    ],
    'Action': [5],
    'Adventure': [0],
    'Romance': [50],
    'Fantasy': [30],
    'Family': [5],
    'Horror': [10]
}

df = pd.DataFrame(data)
df.set_index('Movie', inplace=True)

# Calculate percentages for each genre
total = df.iloc[0].sum()
percentages = [(count / total) * 100 for count in df.iloc[0]]

# Set the 'viridis' color palette
colors = sns.color_palette("viridis", n_colors=len(df.columns))

# Set the style to whitegrid
sns.set(style="whitegrid")
plt.figure(figsize=(8, 8))

# Combine genre name and percentage in labels
labels = ['{}: {:.1f}%'.format(label, percentage) for label, percentage in zip(df.columns, percentages)]

plt.pie(df.iloc[0], labels=labels, colors=colors, startangle=140, wedgeprops=dict(width=0.4))
plt.axis('equal')
plt.title(df.index[0])

plt.show()



import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

data = {
    'Movie': [
        "The Twilight Saga: Eclipse (2010)"
    ],
    'Action': [5],
    'Adventure': [0],
    'Romance': [50],
    'Fantasy': [30],
    'Family': [5],
    'Horror': [10]
}

df = pd.DataFrame(data)
df.set_index('Movie', inplace=True)

# Calculate percentages for each genre
total = df.iloc[0].sum()
percentages = [(count / total) * 100 for count in df.iloc[0]]

# Set the 'viridis' color palette
colors = sns.color_palette("viridis", n_colors=len(df.columns))

# Set the style to whitegrid
sns.set(style="whitegrid")
plt.figure(figsize=(8, 8))

# Combine genre name and percentage in labels
labels = ['{}: {:.1f}%'.format(label, percentage) for label, percentage in zip(df.columns, percentages)]

plt.pie(df.iloc[0], labels=labels, colors=colors, startangle=140, wedgeprops=dict(width=0.4))
plt.axis('equal')

# Add the movie title in the center
plt.text(0.5, 0.5, df.index[0], horizontalalignment='center', verticalalignment='center', fontsize=16, transform=plt.gcf().transFigure)

plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

data = {
    'Movie': [
        "The Twilight Saga: Eclipse (2010)"
    ],
    'Action': [5],
    'Adventure': [0],
    'Romance': [50],
    'Fantasy': [30],
    'Family': [5],
    'Horror': [10]
}

df = pd.DataFrame(data)
df.set_index('Movie', inplace=True)

# Set the same color combination as in the 'viridis' palette
colors = ['#440154', '#3B528B', '#21908C', '#5DC863', '#FDAE61', '#FEE08B']

# Set the style to whitegrid
sns.set(style="whitegrid")
plt.figure(figsize=(8, 8))

# Create the pie chart
wedges, texts, autotexts = plt.pie(df.iloc[0], labels=df.columns, colors=colors, autopct='%1.1f%%', startangle=140, wedgeprops=dict(width=0.4))
plt.axis('equal')
plt.title("")  # Clear the title to make space for the movie title

# Add the movie title in the center
plt.text(0, 0, df.index[0], ha='center', va='center', fontsize=16, fontweight='bold', color='black')

# Show the plot
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

data = {
    'Movie': [
        "The Twilight Saga: Eclipse (2010)"
    ],
    'Action': [5],
    'Adventure': [0],
    'Romance': [50],
    'Fantasy': [30],
    'Family': [5],
    'Horror': [10]
}

df = pd.DataFrame(data)
df.set_index('Movie', inplace=True)

# Set the same color combination as in the 'viridis' palette
colors = ['#440154', '#414487', '#2a788e', '#22a884', '#7ad151', '#fde725']

# Set the style to whitegrid
sns.set(style="whitegrid")
plt.figure(figsize=(8, 8))

# Create the pie chart
wedges, texts, autotexts = plt.pie(df.iloc[0], labels=df.columns, colors=colors, autopct=lambda p: '{:.1f}%'.format(p), startangle=140, wedgeprops=dict(width=0.4))
plt.axis('equal')
plt.title("")  # Clear the title to make space for the movie title

# Add the percentage values with genre names
for t, a in zip(texts, autotexts):
    genre_label = t.get_text()
    genre_value = a.get_text()
    a.set_text(f'{genre_label}\n{genre_value}')
    a.set_fontsize(10)  # Adjust font size for better readability

# Add the movie title in the center
plt.text(0, 0, df.index[0], ha='center', va='center', fontsize=16, fontweight='bold', color='black')

# Show the plot
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

data = {
    'Movie': [
        "The Twilight Saga: Eclipse (2010)"
    ],
    'Action': [5],
    'Adventure': [5],
    'Romance': [45],
    'Fantasy': [30],
    'Family': [5],
    'Horror': [10]
}

df = pd.DataFrame(data)
df.set_index('Movie', inplace=True)

# Set the same color combination as in the 'viridis' palette
colors = ['#440154', '#414487', '#2a788e', '#22a884', '#7ad151', '#fde725']

# Set the style to whitegrid
sns.set(style="whitegrid")
plt.figure(figsize=(8, 8))

# Create the pie chart with labels and percentage values
wedges, texts, autotexts = plt.pie(df.iloc[0], labels=[f'{label}\n{val}%' for label, val in zip(df.columns, df.iloc[0])], colors=colors, startangle=140, autopct='', wedgeprops=dict(width=0.4))
plt.axis('equal')

# Adjust layout to prevent title from crossing inner circle and center the title
plt.title("")  # Clear the title to make space for the movie title
plt.text(0, 0, df.index[0], ha='center', va='center', fontsize=16, color='black')

# Set the position of the title to be more centered
plt.gcf().subplots_adjust(top=0.9)  # Adjust top margin

# Show the plot
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

data = {
    'Movie': [
        "Dracula Untold (2014)"
    ],
    'Action': [20],
    'Adventure': [20],
    'Romance': [20],
    'Fantasy': [20],
    'Family': [0],
    'Horror': [20]
}

df = pd.DataFrame(data)
df.set_index('Movie', inplace=True)

# Set the same color combination as in the 'viridis' palette
colors = ['#440154', '#414487', '#2a788e', '#22a884', '#7ad151', '#fde725']

# Set the style to whitegrid
sns.set(style="whitegrid")
plt.figure(figsize=(8, 8))

# Create the pie chart with labels and percentage values
wedges, texts, autotexts = plt.pie(df.iloc[0], labels=[f'{label}\n{val}%' for label, val in zip(df.columns, df.iloc[0])], colors=colors, startangle=140, autopct='', wedgeprops=dict(width=0.4))
plt.axis('equal')

# Adjust layout to prevent title from crossing inner circle and center the title
plt.title("")  # Clear the title to make space for the movie title
plt.text(0, 0, df.index[0], ha='center', va='center', fontsize=16, color='black')

# Set the position of the title to be more centered
plt.gcf().subplots_adjust(top=0.9)  # Adjust top margin

# Show the plot
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

data = {
    'Movie': [
        "The Twilight Saga: Eclipse (2010)"
    ],
    'Action': [5],
    'Adventure': [5],
    'Romance': [45],
    'Fantasy': [30],
    'Family': [5],
    'Horror': [10]
}

df = pd.DataFrame(data)
df.set_index('Movie', inplace=True)

# Set the same color combination as in the 'viridis' palette
#colors = ['#440154', '#414487', '#2a788e', '#22a884', '#7ad151', '#fde725']
colors = ["red", "green", "pink", "blue", "yellow", "black"]
# Set the style to whitegrid
sns.set(style="whitegrid")
plt.figure(figsize=(6, 6))

# Create the pie chart with labels and percentage values
wedges, texts, autotexts = plt.pie(df.iloc[0], labels=[f'{label}\n{val}%' for label, val in zip(df.columns, df.iloc[0])], colors=colors, startangle=140, autopct='', wedgeprops=dict(width=0.4))
plt.axis('equal')

# Adjust layout to prevent title from crossing inner circle and center the title
plt.title("")  # Clear the title to make space for the movie title
plt.text(0, 0, df.index[0], ha='center', va='center', fontsize=10, color='black')  # Adjust fontsize

# Set the position of the title to be more centered
plt.gcf().subplots_adjust(top=0.9)  # Adjust top margin

# Show the plot
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from matplotlib.font_manager import FontProperties

data = {
    'Movie': [
        "The Twilight Saga: Eclipse (2010)"
    ],
    'Action': [5],
    'Adventure': [5],
    'Romance': [45],
    'Fantasy': [30],
    'Family': [5],
    'Horror': [10]
}

df = pd.DataFrame(data)
df.set_index('Movie', inplace=True)

colors = ["red", "green", "pink", "blue", "yellow", "black"]

sns.set(style="whitegrid")
plt.figure(figsize=(5, 5),dpi=300)

wedges, texts, autotexts = plt.pie(
    df.iloc[0],
    labels=[f'{label}\n{val}%' for label, val in zip(df.columns, df.iloc[0])],
    colors=colors,
    startangle=140,
    autopct='',
    wedgeprops=dict(width=0.4)
)
plt.axis('equal')

# Bold the labels on the pie chart segments
font_props = FontProperties(weight='bold', size=8)
for text in texts:
    text.set_font_properties(font_props)

plt.title("")  # Clear the title to make space for the movie title
plt.text(0, 0, df.index[0], ha='center', va='center', fontsize=8, color='black', fontweight='bold')

plt.gcf().subplots_adjust(top=0.9)
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from matplotlib.font_manager import FontProperties

data = {
    'Movie': "Hansel & Gretel: Frame@1:40",
    'Action': 10,
    'Adventure': 10,
    'Romance': 5,
    'Fantasy': 10,
    'Family': 5,
    'Horror': 60
}

df = pd.DataFrame([data])
df.set_index('Movie', inplace=True)

colors = ["red", "green", "pink", "blue", "yellow", "black"]

sns.set(style="whitegrid")
plt.figure(figsize=(5, 5), dpi=300)

wedges, texts, autotexts = plt.pie(
    df.iloc[0],
    labels=[f'{label}\n{val}%' for label, val in zip(df.columns, df.iloc[0])],
    colors=colors,
    startangle=140,
    autopct='',
    wedgeprops=dict(width=0.4)
)
plt.axis('equal')

# Bold the labels on the pie chart segments
font_props = FontProperties(weight='bold', size=8)
for text in texts:
    text.set_font_properties(font_props)

plt.title("")  # Clear the title to make space for the movie title
plt.text(0, 0, df.index[0], ha='center', va='center', fontsize=8, color='black', fontweight='bold')

plt.gcf().subplots_adjust(top=0.9)
plt.show()